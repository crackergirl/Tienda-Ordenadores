// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TiendaOrdenadoresDB.Data;

#nullable disable

namespace TiendaOrdenadoresDB.Migrations
{
    [DbContext(typeof(TiendaOrdenadoresDBContext))]
    [Migration("20230824112204_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TiendaOrdenadoresDB.Models.Componente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<long>("Almacenamiento")
                        .HasColumnType("bigint");

                    b.Property<int>("Calor")
                        .HasColumnType("int");

                    b.Property<int>("Categoria")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDeSerie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(2);

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.Property<string>("UnidadMedida")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Componente");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Almacenamiento = 9L,
                            Calor = 10,
                            Categoria = 0,
                            Description = "Procesador intel i7",
                            NumeroDeSerie = "789-XCS",
                            Precio = 134,
                            UnidadMedida = "Cores"
                        },
                        new
                        {
                            Id = 2,
                            Almacenamiento = 10L,
                            Calor = 12,
                            Categoria = 0,
                            Description = "Procesador intel i7",
                            NumeroDeSerie = "789-XCD",
                            Precio = 138,
                            UnidadMedida = "Cores"
                        },
                        new
                        {
                            Id = 3,
                            Almacenamiento = 11L,
                            Calor = 22,
                            Categoria = 0,
                            Description = "Procesador intel i7",
                            NumeroDeSerie = "789-XCT",
                            Precio = 138,
                            UnidadMedida = "Cores"
                        },
                        new
                        {
                            Id = 4,
                            Almacenamiento = 10L,
                            Calor = 30,
                            Categoria = 0,
                            Description = "Procesador intel i7",
                            NumeroDeSerie = "797-X",
                            Precio = 78,
                            UnidadMedida = "Cores"
                        },
                        new
                        {
                            Id = 5,
                            Almacenamiento = 29L,
                            Calor = 30,
                            Categoria = 0,
                            Description = "Procesador intel i7",
                            NumeroDeSerie = "797-X2",
                            Precio = 178,
                            UnidadMedida = "Cores"
                        },
                        new
                        {
                            Id = 6,
                            Almacenamiento = 34L,
                            Calor = 60,
                            Categoria = 0,
                            Description = "Procesador intel i7",
                            NumeroDeSerie = "797-X3",
                            Precio = 278,
                            UnidadMedida = "Cores"
                        },
                        new
                        {
                            Id = 7,
                            Almacenamiento = 4096L,
                            Calor = 10,
                            Categoria = 1,
                            Description = "Banco de Memoria SDRAM",
                            NumeroDeSerie = "879-FH",
                            Precio = 100,
                            UnidadMedida = "Bytes"
                        },
                        new
                        {
                            Id = 8,
                            Almacenamiento = 1000L,
                            Calor = 15,
                            Categoria = 1,
                            Description = "Banco de Memoria SDRAM",
                            NumeroDeSerie = "879-FH-L",
                            Precio = 125,
                            UnidadMedida = "Bytes"
                        },
                        new
                        {
                            Id = 9,
                            Almacenamiento = 2000L,
                            Calor = 24,
                            Categoria = 1,
                            Description = "Banco de Memoria SDRAM",
                            NumeroDeSerie = "879-FH-T",
                            Precio = 150,
                            UnidadMedida = "Bytes"
                        },
                        new
                        {
                            Id = 10,
                            Almacenamiento = 500000L,
                            Calor = 10,
                            Categoria = 2,
                            Description = "DiscoDuro SanDisk",
                            NumeroDeSerie = "789-XX",
                            Precio = 50,
                            UnidadMedida = "Bytes"
                        },
                        new
                        {
                            Id = 11,
                            Almacenamiento = 1000000L,
                            Calor = 29,
                            Categoria = 2,
                            Description = "DiscoDuro SanDisk",
                            NumeroDeSerie = "789-XX-2",
                            Precio = 90,
                            UnidadMedida = "Bytes"
                        },
                        new
                        {
                            Id = 12,
                            Almacenamiento = 2000000L,
                            Calor = 39,
                            Categoria = 2,
                            Description = "DiscoDuro SanDisk",
                            NumeroDeSerie = "789-XX-3",
                            Precio = 128,
                            UnidadMedida = "Bytes"
                        },
                        new
                        {
                            Id = 13,
                            Almacenamiento = 250000L,
                            Calor = 35,
                            Categoria = 2,
                            Description = "DiscoMecanico Patatin",
                            NumeroDeSerie = "788-FG",
                            Precio = 37,
                            UnidadMedida = "Bytes"
                        },
                        new
                        {
                            Id = 14,
                            Almacenamiento = 250000L,
                            Calor = 35,
                            Categoria = 2,
                            Description = "DiscoMecanico Patatin",
                            NumeroDeSerie = "788-FG-2",
                            Precio = 67,
                            UnidadMedida = "Bytes"
                        },
                        new
                        {
                            Id = 15,
                            Almacenamiento = 250000L,
                            Calor = 35,
                            Categoria = 2,
                            Description = "DiscoMecanico Patatin",
                            NumeroDeSerie = "788-FG-3",
                            Precio = 97,
                            UnidadMedida = "Bytes"
                        },
                        new
                        {
                            Id = 16,
                            Almacenamiento = 9000000L,
                            Calor = 10,
                            Categoria = 2,
                            Description = "Disco Externo Sam",
                            NumeroDeSerie = "1789-XCS",
                            Precio = 134,
                            UnidadMedida = "Bytes"
                        },
                        new
                        {
                            Id = 17,
                            Almacenamiento = 10000000L,
                            Calor = 12,
                            Categoria = 2,
                            Description = "Disco Externo Sam",
                            NumeroDeSerie = "1789-XCD",
                            Precio = 138,
                            UnidadMedida = "Bytes"
                        },
                        new
                        {
                            Id = 18,
                            Almacenamiento = 11000000L,
                            Calor = 22,
                            Categoria = 2,
                            Description = "Disco Externo Sam",
                            NumeroDeSerie = "1789-XCT",
                            Precio = 140,
                            UnidadMedida = "Bytes"
                        });
                });

            modelBuilder.Entity("TiendaOrdenadoresDB.Models.Ordenador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDeSerie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ordenador");
                });

            modelBuilder.Entity("TiendaOrdenadoresDB.Models.OrdenadorComponente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComponenteId")
                        .HasColumnType("int");

                    b.Property<int>("OrdenadorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComponenteId");

                    b.HasIndex("OrdenadorId");

                    b.ToTable("OrdenadorComponente");
                });

            modelBuilder.Entity("TiendaOrdenadoresDB.Models.OrdenadorPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("OrdenadorId")
                        .HasColumnType("int");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrdenadorId");

                    b.HasIndex("PedidoId");

                    b.ToTable("OrdenadorPedido");
                });

            modelBuilder.Entity("TiendaOrdenadoresDB.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Calor")
                        .HasColumnType("float");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("TiendaOrdenadoresDB.Models.OrdenadorComponente", b =>
                {
                    b.HasOne("TiendaOrdenadoresDB.Models.Componente", "Componente")
                        .WithMany()
                        .HasForeignKey("ComponenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TiendaOrdenadoresDB.Models.Ordenador", "Ordenador")
                        .WithMany("OrdenadorComponentes")
                        .HasForeignKey("OrdenadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Componente");

                    b.Navigation("Ordenador");
                });

            modelBuilder.Entity("TiendaOrdenadoresDB.Models.OrdenadorPedido", b =>
                {
                    b.HasOne("TiendaOrdenadoresDB.Models.Ordenador", "Ordenador")
                        .WithMany()
                        .HasForeignKey("OrdenadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TiendaOrdenadoresDB.Models.Pedido", "Pedido")
                        .WithMany("OrdenadorPedido")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ordenador");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("TiendaOrdenadoresDB.Models.Ordenador", b =>
                {
                    b.Navigation("OrdenadorComponentes");
                });

            modelBuilder.Entity("TiendaOrdenadoresDB.Models.Pedido", b =>
                {
                    b.Navigation("OrdenadorPedido");
                });
#pragma warning restore 612, 618
        }
    }
}
